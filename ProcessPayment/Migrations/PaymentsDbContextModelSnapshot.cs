// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProcessPayment.DataLayer;

namespace ProcessPayment.Migrations
{
    [DbContext(typeof(PaymentsDbContext))]
    partial class PaymentsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProcessPayment.ViewModels.PaymentData", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Amount");

                    b.Property<string>("CardHolder")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CardHolder");

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("nvarchar(19)")
                        .HasColumnName("CreditCardNumber");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpirationDate");

                    b.Property<int?>("PaymentStateId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("SecurityCode");

                    b.HasKey("PaymentId");

                    b.HasIndex("PaymentStateId");

                    b.ToTable("PaymentData");
                });

            modelBuilder.Entity("ProcessPayment.ViewModels.PaymentState", b =>
                {
                    b.Property<int>("PaymentStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentStateId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentStateDescription")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PaymentStateDescription");

                    b.HasKey("PaymentStateId");

                    b.ToTable("PaymentState");

                    b.HasData(
                        new
                        {
                            PaymentStateId = 1,
                            PaymentStateDescription = "pending"
                        },
                        new
                        {
                            PaymentStateId = 2,
                            PaymentStateDescription = "processed"
                        },
                        new
                        {
                            PaymentStateId = 3,
                            PaymentStateDescription = "failed"
                        });
                });

            modelBuilder.Entity("ProcessPayment.ViewModels.PaymentData", b =>
                {
                    b.HasOne("ProcessPayment.ViewModels.PaymentState", "PaymentState")
                        .WithMany()
                        .HasForeignKey("PaymentStateId");

                    b.Navigation("PaymentState");
                });
#pragma warning restore 612, 618
        }
    }
}
